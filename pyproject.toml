[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "splotch-st"
version = "0.1.1a0"
description = "Splotch is a hierarchical generative probabilistic model for analyzing Spatial Transcriptomics (ST) data"
authors = [
    "Tarmo Äijö <tarmo.aijo@gmail.com>",
]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/tare/Splotch"
repository = "https://github.com/tare/Splotch"
keywords = [
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
packages = [
    { include = "splotch", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
numpyro = "^0.13.2"
matplotlib = "^3.8.1"
jupyterlab = {version = "^4.0.8", optional = true}
scipy = "^1.11.3"
ipywidgets = {version = "^8.1.1", optional = true}
pandas = "^2.1.3"
funsor = "^0.4.5"
pillow = "^10.1.0"
networkx = "^3.2.1"

[tool.poetry.extras]
examples = ["jupyterlab", "ipywidgets"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4"
tox = "^4.11"
ruff = "^0.1"
mypy = "^1.6"
pre-commit = "^3.5"

[tool.poetry.scripts]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/tare/Splotch/issues"

[tool.ruff]
target-version = "py38"
fix = true
fixable = [
    "I001",  # https://docs.astral.sh/ruff/rules/unsorted-imports/
]
select = [
    "F",  # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "E4",  # https://docs.astral.sh/ruff/rules/#error-e
    "E7",  # https://docs.astral.sh/ruff/rules/#error-e
    "E9",  # https://docs.astral.sh/ruff/rules/#error-e
    "W",  # https://docs.astral.sh/ruff/rules/#warning-w
    "C90",  # https://docs.astral.sh/ruff/rules/#mccabe-c90
    "I",  # https://docs.astral.sh/ruff/rules/#isort-i
    "N",  # https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "D",  # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "UP",  # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "ANN",  # https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    "A",  # https://docs.astral.sh/ruff/rules/#flake8-builtins-a
    "B",  # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4",  # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "EM101",  # https://docs.astral.sh/ruff/rules/#flake8-errmsg-em
    "EXE",  # https://docs.astral.sh/ruff/rules/#flake8-executable-exe
    "ISC",  # https://docs.astral.sh/ruff/rules/#flake8-implicit-str-concat-isc
    "G",  # https://docs.astral.sh/ruff/rules/#flake8-logging-format-g
    "PIE",  # https://docs.astral.sh/ruff/rules/#flake8-pie-pie
    "PT",  # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
    "Q",  # https://docs.astral.sh/ruff/rules/#flake8-quotes-q
    "RET",  # https://docs.astral.sh/ruff/rules/#flake8-return-ret
    "SLF",  # https://docs.astral.sh/ruff/rules/#flake8-self-slf
    "SIM",  # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "TID",  # https://docs.astral.sh/ruff/rules/#flake8-tidy-imports-tid
    "ARG",  # https://docs.astral.sh/ruff/rules/#flake8-unused-arguments-arg
    "PTH",  # https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "TD",  # https://docs.astral.sh/ruff/rules/#flake8-todos-td
    "ERA",  # https://docs.astral.sh/ruff/rules/#eradicate-era
    "PGH",  # https://docs.astral.sh/ruff/rules/#pygrep-hooks-pgh
    "PL",  # https://docs.astral.sh/ruff/rules/#pylint-pl
    "TRY",  # https://docs.astral.sh/ruff/rules/#tryceratops-try
    "NPY",  # https://docs.astral.sh/ruff/rules/#numpy-specific-rules-npy
    "PERF",  # https://docs.astral.sh/ruff/rules/#perflint-perf
    "FURB",  # https://docs.astral.sh/ruff/rules/#refurb-furb
    "LOG",  # https://docs.astral.sh/ruff/rules/#flake8-logging-log
    "RUF",  # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
]
ignore = [
    "ANN101",  # https://docs.astral.sh/ruff/rules/missing-type-self/
    "ISC001",  # https://docs.astral.sh/ruff/rules/#flake8-implicit-str-concat-isc
    "UP034",  # https://docs.astral.sh/ruff/rules/extraneous-parentheses/
]

[tool.ruff.lint]
preview = true

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v"
testpaths = [
    "tests",
]

[tool.mypy]
python_version = "3.10"
follow_imports = "normal"
ignore_missing_imports = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_any_generics = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
